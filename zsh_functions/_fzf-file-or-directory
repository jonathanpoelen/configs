#!/usr/bin/env zsh
__fzf-sel() {
  output=${(j: :)${(qf)"$(fzf $query <<<${(F)files})"}}
}

__fzf-files-check() {
  (( $#files != 0 )) && return 0
  zle -M 'not matches found'
  return 1
}

_fzf-file-or-directory() {
  local output d
  local -a files dirs query
  if [[ "${LBUFFER[-1]}" = ' ' ]] ; then
    files=(**/*(N${1}oN))
    __fzf-files-check || return 1
    __fzf-sel && LBUFFER+=$output
  else
    local found c tail=${${(z)LBUFFER}[-1]}
    local -i ntail=$#tail

    c=${tail[-1]}
    # is directory: xxx/ or 'xxx/' or "xxx/"
    if [[ $c = / ]] || [[ ( $c = \' || $c = \" ) && ${tail[-2]} = / ]] ; then
      eval "dirs=($tail(NoN))"
      if (( $#dirs != 0 )) ; then
        found=x
      else
        eval "dirs=($tail*(NoN))"
      fi
    else
      eval "dirs=($tail*(NoN))"
    fi

    setopt localoptions globstarshort

    if (( $#dirs == 1 )); then
      files=($dirs**/*(N${1}oN))
      if (( $#files == 0 )) ; then
        files=($dirs(N${1}))
        tail=$dirs[1]
      elif [[ ${dirs[1][-1]} = / ]] ; then
        tail=$dirs[1]
      else
        tail=$dirs[1]/
      fi
      found=x
    elif (( $#dirs > 1 )); then
      local -i n=0
      for d in $dirs ; do
        files+=($d**/*(N${1}oN))
        if (( $n == $#files )) ; then
          files+=($d(N${1}))
        fi
        n=$#files
      done

      [[ -z $found ]] || tail=''
    fi

    __fzf-files-check || return 1

    if [[ -n $found ]]; then
      query=(-q $tail)
    else
      local head=$tail:h
      until [[ -d $head ]]; do
        head=$head:h
      done

      if [[ $head != '.' ]]; then
        query=(-q $head)
      fi
    fi

    __fzf-sel && LBUFFER=${LBUFFER:0:-$ntail}$output
  fi

  zle redisplay
  typeset -f zle-line-init >/dev/null && zle zle-line-init
}

#_fzf-file-or-directory "$@"
